@inject IJSRuntime JSRuntime

@if (IsVisible)
{
    <div class="mt-error-dialog-wrapper" style="position: fixed; top: 0; left: 0; right: 0; bottom: 0; display: flex; align-items: center; justify-content: center; z-index: 9999;">
        <div class="modal-dialog mt-error-dialog" style="margin: 0; z-index: 10000; position: relative; background-color: white; border-radius: 0.5rem; box-shadow: 0 10px 30px rgba(0,0,0,0.25); width: 550px; max-width: 95%;">
            <div class="modal-content" style="border: none; border-radius: 0.5rem; background-color: white;">
                <div class="modal-header" style="border-top-left-radius: 0.5rem; border-top-right-radius: 0.5rem; padding: 1.25rem 1.5rem; background-color: #f8f9fa; border-bottom: 1px solid #eaeaea;">
                    <h5 class="modal-title" style="font-size: 1.25rem; font-weight: 600; color: #dc3545; margin: 0;">
                        <i class="fas fa-exclamation-circle me-2"></i>@Title
                    </h5>
                    <button type="button" class="btn-close" @onclick="Close" aria-label="Close" style="box-shadow: none; outline: none;"></button>
                </div>
                <div class="modal-body" style="padding: 1.5rem; font-size: 1rem;">
                    @if (HasMultipleErrors)
                    {
                        <div class="alert alert-danger" style="border-radius: 0.375rem; background-color: rgba(220, 53, 69, 0.1); border: 1px solid rgba(220, 53, 69, 0.2); padding: 1rem 1.25rem;">
                            <strong style="display: block; margin-bottom: 0.75rem; font-size: 1.05rem; color: #dc3545;">
                                <i class="fas fa-exclamation-triangle me-2"></i>Please correct the following errors:
                            </strong>
                            <ul class="mb-0 list-unstyled" style="padding-left: 0.5rem; margin-top: 0.75rem;">
                                @foreach (var error in ParsedErrors)
                                {
                                    <li style="margin-bottom: 0.75rem; color: #343a40; position: relative; padding-left: 1.75rem;">
                                        <i class="fas fa-times-circle" style="position: absolute; left: 0; top: 0.2rem; color: #dc3545;"></i>
                                        <span style="color: #343a40;">@error</span>
                                    </li>
                                }
                            </ul>
                        </div>
                    }
                    else
                    {
                        <p style="margin-bottom: 1.25rem; color: #343a40; line-height: 1.5;">@Message</p>
                    }
                    
                    @if (ValidationErrors?.Any() == true)
                    {
                        <div class="alert alert-danger mt-4" style="border-radius: 0.375rem; background-color: rgba(220, 53, 69, 0.1); border: 1px solid rgba(220, 53, 69, 0.2); padding: 1rem 1.25rem;">
                            <strong style="display: block; margin-bottom: 0.75rem; font-size: 1.05rem; color: #dc3545;">
                                <i class="fas fa-exclamation-triangle me-2"></i>Please correct the following errors:
                            </strong>
                            <ul class="mb-0 list-unstyled" style="padding-left: 0.5rem; margin-top: 0.75rem;">
                                @foreach (var error in ValidationErrors)
                                {
                                    @foreach (var message in error.Value)
                                    {
                                        <li style="margin-bottom: 0.75rem; color: #343a40; position: relative; padding-left: 1.75rem;">
                                            <i class="fas fa-times-circle" style="position: absolute; left: 0; top: 0.2rem; color: #dc3545;"></i>
                                            <strong style="color: #495057;">@error.Key:</strong> 
                                            <span style="color: #343a40;">@message</span>
                                        </li>
                                    }
                                }
                            </ul>
                        </div>
                    }
                </div>
                <div class="modal-footer" style="border-bottom-left-radius: 0.5rem; border-bottom-right-radius: 0.5rem; padding: 1.25rem 1.5rem; border-top: 1px solid #eaeaea; background-color: #f8f9fa;">
                    <button type="button" class="btn btn-primary" @onclick="Close" style="padding: 0.5rem 1.5rem; font-weight: 500; border-radius: 0.375rem; background-color: #0d6efd; border: none; transition: all 0.2s ease;">OK</button>
                </div>
            </div>
        </div>
        
        <div class="mt-error-backdrop" style="position: fixed; top: 0; left: 0; right: 0; bottom: 0; background-color: rgba(0,0,0,0.6); z-index: 9998;"></div>
    </div>
}

@code {
    [Parameter] public bool IsVisible { get; set; }
    [Parameter] public string Title { get; set; } = "Error";
    [Parameter] public string Message { get; set; } = string.Empty;
    [Parameter] public Dictionary<string, string[]>? ValidationErrors { get; set; }
    [Parameter] public EventCallback OnClose { get; set; }

    private List<string> ParsedErrors => Message?.Split(';', StringSplitOptions.RemoveEmptyEntries | StringSplitOptions.TrimEntries)?.ToList() ?? new List<string>();
    private bool HasMultipleErrors => ParsedErrors.Count > 1;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (IsVisible)
        {
            try
            {
                await JSRuntime.InvokeVoidAsync("moveErrorDialogToBodyEnd");
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error calling JS: {ex.Message}");
                // Continue even if JS fails - the inline styles will still work
            }
        }
    }

    private async Task Close()
    {
        IsVisible = false;
        await OnClose.InvokeAsync();
    }
}